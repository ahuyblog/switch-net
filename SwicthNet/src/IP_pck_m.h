//
// Generated file, do not edit! Created by opp_msgc 4.1 from IP_pck.msg.
//

#ifndef _IP_PCK_M_H_
#define _IP_PCK_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>IP_pck.msg</tt> by opp_msgc.
 * <pre>
 * packet IP_pck {
 * 
 * 
 * 
 * 
 * 	unsigned short verHlengthTos;
 * 	unsigned short length;
 * 	unsigned short ident;
 * 	unsigned short f_frOffset;
 * 	unsigned char ttl;
 * 	unsigned char protocol;
 * 	unsigned short checkSum;
 * 	unsigned char destIp[4];
 * 	unsigned char srcIp[4];
 * 	
 * }
 * </pre>
 */
class IP_pck : public ::cPacket
{
  protected:
    unsigned short verHlengthTos_var;
    unsigned short length_var;
    unsigned short ident_var;
    unsigned short f_frOffset_var;
    unsigned char ttl_var;
    unsigned char protocol_var;
    unsigned short checkSum_var;
    unsigned char destIp_var[4];
    unsigned char srcIp_var[4];

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const IP_pck&);

  public:
    IP_pck(const char *name=NULL, int kind=0);
    IP_pck(const IP_pck& other);
    virtual ~IP_pck();
    IP_pck& operator=(const IP_pck& other);
    virtual IP_pck *dup() const {return new IP_pck(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned short getVerHlengthTos() const;
    virtual void setVerHlengthTos(unsigned short verHlengthTos_var);
    virtual unsigned short getLength() const;
    virtual void setLength(unsigned short length_var);
    virtual unsigned short getIdent() const;
    virtual void setIdent(unsigned short ident_var);
    virtual unsigned short getF_frOffset() const;
    virtual void setF_frOffset(unsigned short f_frOffset_var);
    virtual unsigned char getTtl() const;
    virtual void setTtl(unsigned char ttl_var);
    virtual unsigned char getProtocol() const;
    virtual void setProtocol(unsigned char protocol_var);
    virtual unsigned short getCheckSum() const;
    virtual void setCheckSum(unsigned short checkSum_var);
    virtual unsigned int getDestIpArraySize() const;
    virtual unsigned char getDestIp(unsigned int k) const;
    virtual void setDestIp(unsigned int k, unsigned char destIp_var);
    virtual unsigned int getSrcIpArraySize() const;
    virtual unsigned char getSrcIp(unsigned int k) const;
    virtual void setSrcIp(unsigned int k, unsigned char srcIp_var);
};

inline void doPacking(cCommBuffer *b, IP_pck& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, IP_pck& obj) {obj.parsimUnpack(b);}


#endif // _IP_PCK_M_H_
